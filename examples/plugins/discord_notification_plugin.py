#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Example Plugin: Discord Notifications
======================================

–ü—Ä–∏–º–µ—Ä –ø–ª–∞–≥–∏–Ω–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Discord.

–£—Å—Ç–∞–Ω–æ–≤–∫–∞:
    pip install discord-webhook

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    plugin_config = {
        "webhook_url": "https://discord.com/api/webhooks/..."
    }
    plugin = DiscordNotificationPlugin(plugin_config)
    plugin_manager.register_plugin(plugin)
"""

from typing import Dict, Any
import sys
import os

# –î–æ–±–∞–≤–∏—Ç—å —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

from src.plugins.plugin_interface import PluginInterface, Task


class DiscordNotificationPlugin(PluginInterface):
    """–ü–ª–∞–≥–∏–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ Discord"""
    
    def __init__(self, config: Dict[str, Any]):
        super().__init__(config)
        self.name = "discord_notifications"
        self.version = "1.0.0"
        self.author = "GC-Forged-Pylot Team"
        self.description = "–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–¥–∞—á–∞—Ö –≤ Discord"
        self.webhook_url = config.get("webhook_url", "")
        self.webhook = None
    
    def on_load(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞"""
        if not self.webhook_url:
            print("‚ö†Ô∏è  Discord webhook URL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            self.enabled = False
            return
        
        try:
            from discord_webhook import DiscordWebhook
            self.webhook = DiscordWebhook
            print(f"‚úÖ –ü–ª–∞–≥–∏–Ω {self.name} –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ")
        except ImportError:
            print("‚ö†Ô∏è  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ discord-webhook: pip install discord-webhook")
            self.enabled = False
    
    def on_task_start(self, task: Task) -> None:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–¥–∞—á–∏"""
        if not self.enabled:
            return
        
        try:
            webhook = self.webhook(url=self.webhook_url)
            webhook.content = f"üöÄ **–ó–∞–¥–∞—á–∞ –Ω–∞—á–∞—Ç–∞**\n\n{task.description}"
            webhook.execute()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord: {e}")
    
    def on_task_complete(self, task: Task, result: Any) -> None:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏"""
        if not self.enabled:
            return
        
        try:
            webhook = self.webhook(url=self.webhook_url)
            webhook.content = f"‚úÖ **–ó–∞–¥–∞—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞**\n\n{task.description}\n\n–†–µ–∑—É–ª—å—Ç–∞—Ç: {result}"
            webhook.execute()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord: {e}")
    
    def on_task_error(self, task: Task, error: Exception) -> str:
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        if not self.enabled:
            return
        
        try:
            webhook = self.webhook(url=self.webhook_url)
            webhook.content = f"‚ùå **–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏**\n\n{task.description}\n\n–û—à–∏–±–∫–∞: {str(error)}"
            webhook.execute()
            return "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord"
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Discord: {e}")
            return None


if __name__ == "__main__":
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ø–ª–∞–≥–∏–Ω–∞
    print("=== –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Discord Notification Plugin ===\n")
    
    # –°–æ–∑–¥–∞—Ç—å –ø–ª–∞–≥–∏–Ω (–±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–≥–æ webhook)
    config = {
        "webhook_url": "https://discord.com/api/webhooks/example"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL
    }
    
    plugin = DiscordNotificationPlugin(config)
    print(f"–ü–ª–∞–≥–∏–Ω: {plugin.name} v{plugin.version}")
    print(f"–ê–≤—Ç–æ—Ä: {plugin.author}")
    print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {plugin.description}")
    print(f"\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–≥–∏–Ω–µ:")
    print(plugin.get_info())
